version: '3.8'

services:

  nginx:
    build:
      context: ./nginx
    volumes:
      - static_volume:/usr/src/app/front
      - media:/usr/src/app/media
    ports:
      - 80:80
    depends_on:
      - asgi-web
      - socketio

  asgi-web:
    build: .
    # command: gunicorn -b 0.0.0.0:8000 --worker-class=uvicorn.workers.UvicornWorker --workers=1 fastapi_config.main:app
    command: uvicorn fastapi_config.main:app --host 0.0.0.0 --port 8000
    # command: sh -c "sleep 45 && uvicorn fastapi_config.main:app --host 0.0.0.0 --port 8000"
    volumes:
      - static_volume:/usr/src/app/front
      - media:/usr/src/app/media
      - ./:/usr/src/app/
    env_file:
      - ./.env
    # ports:
    #   - 8000:8000
    depends_on:
      rabbitmq:
        condition: service_healthy

  socketio:
    build: .
    command: uvicorn socketio_config.server:socket_app --host 0.0.0.0 --port 5000
    volumes:
      - ./:/usr/src/app/
      - media:/usr/src/app/media
    env_file:
      - ./.env
    ports:
      - 5000:5000
    # expose:
    #   - "5000"
    depends_on:
      - asgi-web
      - db


  db:
    image: postgres:15.0
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - media:/usr/src/app/media
    env_file:
      - ./.env

  redis:
    image: redis:7.2
    depends_on:
      - asgi-web
      - db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  celery_with_block-parser-query:
    build:
      context: .
    command: celery -A celery_config.tasks worker -l info -Q parse_latest_block_query -n worker_1 --concurrency=1 --loglevel=info
    volumes:
      - ./:/usr/src/app/
    env_file:
      - ./.env
    depends_on:
      - db
      - asgi-web
      - redis

  celery_with_block-handler-query:
    build:
      context: .
    command: celery -A celery_config.tasks worker -l info -Q handle_block_query -n worker_2 --concurrency=1 --loglevel=info
    volumes:
      - ./:/usr/src/app/
    env_file:
      - ./.env
    depends_on:
      - db
      - asgi-web
      - redis


  # celery_with_block-main-celery:
  #   build:
  #       context: .
  #   command: celery -A celery_config.tasks worker --loglevel=info
  #   volumes:
  #     - ./:/usr/src/app/
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - db
  #     - asgi-web

  # celery-beat:
  #   build:
  #       context: .
  #   command: celery -A celery_config.config beat -l info
  #   volumes:
  #     - ./:/usr/src/app/
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - db
  #     - asgi-web
  #     - celery_with_block-parser-query
  #     - celery_with_block-handler-query
  #     # - celery_with_block-oldest_delivery_query
  #     - celery_with_block-main-celery

volumes:
  postgres_data:
  static_volume:
  media: