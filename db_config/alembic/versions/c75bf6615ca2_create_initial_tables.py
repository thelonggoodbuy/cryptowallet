"""create initial tables

Revision ID: c75bf6615ca2
Revises: 
Create Date: 2024-07-12 13:18:44.238118

"""
from typing import Sequence, Union
import sqlalchemy_utils

from alembic import op
import sqlalchemy as sa
from src.wallets.models import Blockchain, Asset
from src.etherium.models import Transaction
from src.orders.models import Order
import sqlalchemy_file

# revision identifiers, used by Alembic.
revision: str = 'c75bf6615ca2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blockchain',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blockchain_type', sqlalchemy_utils.types.choice.ChoiceType(Blockchain.BLOCKCHAINTYPE), nullable=True),
    sa.Column('title', sa.String(length=70), nullable=False),
    sa.Column('photo', sqlalchemy_file.types.FileField(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('send_from', sa.String(length=100), nullable=False),
    sa.Column('send_to', sa.String(length=100), nullable=False),
    sa.Column('value', sa.DECIMAL(precision=22, scale=18), nullable=True),
    sa.Column('txn_hash', sa.String(length=200), nullable=False),
    sa.Column('date_time_transaction', sa.DateTime(), nullable=True),
    sa.Column('txn_fee', sa.DECIMAL(precision=22, scale=18), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(Transaction.STATUS), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=70), nullable=False),
    sa.Column('password', sa.String(length=70), nullable=False),
    sa.Column('username', sa.String(length=70), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('photo', sqlalchemy_file.types.FileField(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('asset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sqlalchemy_utils.types.choice.ChoiceType(Asset.TYPES), nullable=True),
    sa.Column('text', sa.TEXT(), nullable=False),
    sa.Column('decimal_places', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=70), nullable=False),
    sa.Column('blockchain_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=70), nullable=False),
    sa.ForeignKeyConstraint(['blockchain_id'], ['blockchain.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.TEXT(), nullable=False),
    sa.Column('photo', sqlalchemy_file.types.FileField(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wallet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('private_key', sa.String(length=300), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=300), nullable=False),
    sa.Column('balance', sa.DECIMAL(precision=22, scale=18), nullable=True),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('private_key')
    )
    op.create_index('ix_wallet_address', 'wallet', ['address'], unique=False)
    op.create_index('ix_wallet_user_id', 'wallet', ['user_id'], unique=False)
    op.create_table('commodity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('wallet_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=70), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=22, scale=18), nullable=True),
    sa.Column('photo', sqlalchemy_file.types.FileField(), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('commodity_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('return_transaction_id', sa.Integer(), nullable=True),
    sa.Column('date_time_transaction', sa.DateTime(), nullable=True),
    sa.Column('order_status', sqlalchemy_utils.types.choice.ChoiceType(Order.ORDER_STATUS), nullable=True),
    sa.ForeignKeyConstraint(['commodity_id'], ['commodity.id'], ),
    sa.ForeignKeyConstraint(['return_transaction_id'], ['transaction.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order')
    op.drop_table('commodity')
    op.drop_index('ix_wallet_user_id', table_name='wallet')
    op.drop_index('ix_wallet_address', table_name='wallet')
    op.drop_table('wallet')
    op.drop_table('message')
    op.drop_table('asset')
    op.drop_table('user')
    op.drop_table('transaction')
    op.drop_table('blockchain')
    # ### end Alembic commands ###
